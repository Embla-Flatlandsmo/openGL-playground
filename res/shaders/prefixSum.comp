#version 430 

layout( local_size_x = 1024, local_size_y = 1, local_size_z = 1 ) in;


layout(std430, binding=4) buffer prefixSum
{
    uint prefixSums[];
};

layout(std430, binding=5) readonly buffer bucketSize
{
    uint bucketSizes[];
};

layout(location=1) uniform uint chunkSize;
layout(location=2) uniform uint numCells;

void main(void) {
    uint gid = gl_GlobalInvocationID.x;
    uint stepLength = chunkSize / 2;
    if (chunkSize == 2) {
        // Initial condition, copy bucket sizes to prefix sum
        // TODO: see if this can be done with memcpy on CPU to prevent checking.
        // Is it better like this? Then we don't have to go from GPU->CPU->GPU
        prefixSums[gid] = bucketSizes[gid];
    }

    if ((gid < stepLength) || (gid => numCells)) {
        // We will index out of bounds if we try (gid-stepLength<0)
        return;
    }
    // Make sure everyone has read before we write
    uint newPrefixSum = prefixSums[gid] + prefixSums[gid-stepLength];
    barrier();

    prefixSums[gid] = newPrefixSum;
}